// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// BotResourceLibraryDao is the data access object for table botFolder.
type BotResourceLibraryDao struct {
	table   string                    // table is the underlying table name of the DAO.
	group   string                    // group is the database configuration group name of current DAO.
	columns BotResourceLibraryColumns // columns contains all the column names of Table for convenient usage.
}

// BotResourceLibraryColumns defines and stores column names for table botFolder.
type BotResourceLibraryColumns struct {
	Id                string //
	CreateTime        string // 创建时间
	UpdateTime        string // 更新时间
	DeleteTime        string // 删除时间
	BotId             string // 机器人ID
	FolderId string // 文件夹ID
}

// botResourceLibraryColumns holds the columns for table botFolder.
var botResourceLibraryColumns = BotResourceLibraryColumns{
	Id:                "id",
	CreateTime:        "createTime",
	UpdateTime:        "updateTime",
	DeleteTime:        "deleteTime",
	BotId:             "botId",
	FolderId: "folderId",
}

// NewBotResourceLibraryDao creates and returns a new DAO object for table data access.
func NewBotResourceLibraryDao() *BotResourceLibraryDao {
	return &BotResourceLibraryDao{
		group:   "default",
		table:   "botFolder",
		columns: botResourceLibraryColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *BotResourceLibraryDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *BotResourceLibraryDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *BotResourceLibraryDao) Columns() BotResourceLibraryColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *BotResourceLibraryDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *BotResourceLibraryDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *BotResourceLibraryDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}

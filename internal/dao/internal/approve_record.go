// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// ApproveRecordDao is the data access object for table approveRecord.
type ApproveRecordDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns ApproveRecordColumns // columns contains all the column names of Table for convenient usage.
}

// ApproveRecordColumns defines and stores column names for table approveRecord.
type ApproveRecordColumns struct {
	Id         string // 记录ID
	CreateTime string // 创建时间
	UpdateTime string // 更新时间
	DeleteTime string // 删除时间
	UserId     string // 用户ID
	TemplateId string // 关联的模版id
	Approver   string // 审批人id
	Result     string // 审批结果 1:通过 2:驳回 3:已上架 4:已下架
	Content    string // 审批备注
	IsRead     string // 是否已读 0未读 1已读
}

// approveRecordColumns holds the columns for table approveRecord.
var approveRecordColumns = ApproveRecordColumns{
	Id:         "id",
	CreateTime: "createTime",
	UpdateTime: "updateTime",
	DeleteTime: "deleteTime",
	UserId:     "userId",
	TemplateId: "templateId",
	Approver:   "approver",
	Result:     "result",
	Content:    "content",
	IsRead:     "isRead",
}

// NewApproveRecordDao creates and returns a new DAO object for table data access.
func NewApproveRecordDao() *ApproveRecordDao {
	return &ApproveRecordDao{
		group:   "default",
		table:   "approveRecord",
		columns: approveRecordColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *ApproveRecordDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *ApproveRecordDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *ApproveRecordDao) Columns() ApproveRecordColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *ApproveRecordDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *ApproveRecordDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *ApproveRecordDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}

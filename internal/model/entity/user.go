// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package entity

import (
	"github.com/gogf/gf/v2/os/gtime"
)

// User is the golang structure for table user.
type User struct {
	Id         uint        `json:"id" dc:"用户ID"        ` // 用户ID
	CreateTime *gtime.Time `json:"createTime" dc:"创建时间" ` // 创建时间
	UpdateTime *gtime.Time `json:"updateTime" dc:"更新时间"` // 更新时间
	DeleteTime *gtime.Time `json:"deleteTime" dc:"删除时间"` // 删除时间
	Name       string      `json:"name"       dc:"用户名"` // 用户名
	Phone      string      `json:"phone"      dc:"手机号码"` // 手机号码
	Password   string      `json:"password"   dc:"密码"` // 密码
	Email      string      `json:"email"      dc:"邮箱"` // 邮箱
	Salt       string      `json:"salt"       dc:"密码盐值"` // 密码盐值
	Is_admin   int         `json:"is_admin"   dc:"是否是管理员"` // 是否是管理员
	User_status int         `json:"user_status"   dc:"用户状态"` // 用户状态
	Is_membership int         `json:"is_membership"   dc:"是否是会员"` // 是否是会员
	Member_deadline *gtime.Time `json:"member_deadline"   dc:"会员到期时间"` // 会员到期时间
	GoogleId string `json:"googleId" dc:"谷歌标识"` // 谷歌ID
}

type UserRes struct {
	Id         uint        `json:"id" dc:"用户ID"        `  // 用户ID
	CreateTime *gtime.Time `json:"createTime" dc:"创建时间" ` // 创建时间
	UpdateTime *gtime.Time `json:"updateTime" dc:"更新时间"`  // 更新时间
	DeleteTime *gtime.Time `json:"deleteTime" dc:"删除时间"`  // 删除时间
	Name       string      `json:"name"       dc:"用户名"`   // 用户名
}

func (df *User) DefaultUpdateTime() {
	df.UpdateTime = gtime.Now()
}

// DefaultCreateAt changes the default createAt field
func (df *User) DefaultCreateTime() {
	df.CreateTime = gtime.Now()
}